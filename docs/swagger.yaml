---
openapi: 3.0.0
info:
  title: TekClinic REST API
  description: API of TekClinic
  version: 1.0.0
servers:
- url: /
paths:
  /patient:
    get:
      tags:
      - Patient
      description: returns all registered patients
      operationId: getPatients
      parameters:
      - name: skip
        in: query
        description: number of patients to skip
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        description: max number of patients to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 1
          type: integer
          format: int32
          default: 20
      - name: search
        in: query
        description: Search term for filtering. It searches personal ID, phone number, name, special note, and referred person. All words in the search term must appear in one of the fields as a prefix.
        required: false
        style: form
        explode: true
        schema:
          maxLength: 100
          minLength: 1
          type: string
      responses:
        "200":
          description: all the patients
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamedAPIResourceList'
              example:
                count: 248
                next: http://api.tekclinic.org/patient/?limit=20&offset=20&search=john
                results:
                - name: patient
                  url: http://api.tekclinic.org/patient/1/
                - name: patient
                  url: http://api.tekclinic.org/patient/2/
    post:
      tags:
      - Patient
      operationId: createPatient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientBase'
      responses:
        "201":
          description: id of the created patient
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdHolder'
  /patient/{id}:
    get:
      tags:
      - Patient
      description: returns a specific patient
      operationId: getPatient
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: patient associated with the id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
    delete:
      tags:
        - Patient
      description: deletes a patient
      operationId: deletePatient
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: patient deleted successfully
  /doctor:
    get:
      tags:
      - Doctor
      description: returns all registered doctors
      operationId: getDoctors
      parameters:
      - name: skip
        in: query
        description: number of doctors to skip
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        description: max number of doctors to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 1
          type: integer
          format: int32
          default: 20
      - name: search
        in: query
        description: Search term for filtering. It searches name, phone number, specialities and special note. All words in the search term must appear in one of the fields as a prefix.
        required: false
        style: form
        explode: true
        schema:
          maxLength: 100
          minLength: 1
          type: string
      responses:
        "200":
          description: all the doctors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamedAPIResourceList'
              example:
                count: 12
                results:
                - name: doctor
                  url: http://api.tekclinic.org/doctor/1/
                - name: doctor
                  url: http://api.tekclinic.org/doctor/2/
    post:
      tags:
        - Doctor
      operationId: createDoctor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoctorBase'
      responses:
        "201":
          description: id of the created doctor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdHolder'
  /doctor/{id}:
    get:
      tags:
      - Doctor
      description: returns a specific doctor
      operationId: getDoctor
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: doctor associated with the id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Doctor'
    delete:
      tags:
        - Doctor
      description: deletes a doctor
      operationId: deleteDoctor
      parameters:
        - name: id
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: doctor deleted successfully
  /appointment:
    get:
      tags:
      - Appointment
      description: returns all registered appointments
      operationId: getAppointments
      parameters:
      - name: skip
        in: query
        description: number of appointments to skip
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          format: int32
          default: 0
      - name: limit
        in: query
        description: max number of appointments to return
        required: false
        style: form
        explode: true
        schema:
          maximum: 50
          minimum: 1
          type: integer
          format: int32
          default: 20
      - name: date
        in: query
        description: return appointments only in the specified day
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: date
        example: 2024-11-23
      - name: doctor
        in: query
        description: return appointments only of the specified doctor (id)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
        example: 11
      - name: patient
        in: query
        description: return appointments only of the specified patient (id)
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int32
        example: 21
      responses:
        "200":
          description: all the appointments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamedAPIResourceList'
              example:
                count: 12
                next: http://api.tekclinic.org/appointment/?limit=20&offset=20&date=2024-11-23
                results:
                - name: appointment
                  url: http://api.tekclinic.org/appointment/23/
                - name: appointment
                  url: http://api.tekclinic.org/appointment/122/
    post:
      tags:
      - Appointment
      description: "creates an empty appointment of the doctor corresponding to the *doctor_id*. If *patient_id* supplied, also assigns the patient to this appointment."
      operationId: createAppointment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentBase'
      responses:
        "201":
          description: id of the created appointment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdHolder'
  /appointment/{id}:
    get:
      tags:
      - Appointment
      description: returns a specific appointment
      operationId: getAppointment
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: appointment associated with the id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
    put:
      tags:
      - Appointment
      description: updates a specific appointment
      operationId: updateAppointment
      parameters:
      - name: id
        in: path
        description: id of the appointment to be updated
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentEdit'
      responses:
        "200":
          description: id of the updated appointment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdHolder'
    delete:
      tags:
      - Appointment
      description: deletes an appointment
      operationId: deleteAppointment
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: appointment delete successfully
  /appointment/{id}/patient:
    put:
      tags:
      - Appointment
      description: assigns a patient to the appointment
      operationId: assignPatientToAppointment
      parameters:
      - name: id
        in: path
        description: id of the appointment
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/PatientIdHolder'
      requestBody:
        description: patient that will be assigned to the appointment
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientIdHolder'
            example:
              patient_id: 12
      responses:
        "200":
          description: appointment associated with the id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientIdHolder'
    delete:
      tags:
      - Appointment
      description: unassign any patient assigned to the appointment
      operationId: clearPatientFromAppointment
      parameters:
      - name: id
        in: path
        description: id of the appointment
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: previously assigned patient
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientIdHolder'
components:
  schemas:
    NamedAPIResourceList:
      required:
      - count
      - next
      - previous
      - results
      type: object
      properties:
        count:
          type: number
          description: total number of resources available from this API.
          format: int32
        next:
          type: string
          description: URL of the next page in the list.
          format: uri
          nullable: true
        previous:
          type: string
          description: URL of the previous page in the list.
          format: uri
          nullable: true
        results:
          type: array
          items:
            $ref: '#/components/schemas/NamedAPIResource'
    NamedAPIResource:
      required:
      - name
      - url
      type: object
      properties:
        name:
          type: string
          description: type name of the referenced resource.
        url:
          type: string
          description: URL of the referenced resource.
          format: uri
    PatientBase:
      required:
      - birth_date
      - name
      - personal_id
      type: object
      properties:
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: full name of patient.
          example: Henry Smith
        personal_id:
          $ref: '#/components/schemas/PersonalId'
        gender:
          type: string
          description: gender of patient.
          example: male
          default: unspecified
          enum:
          - unspecified
          - male
          - female
        phone_number:
          type: string
          description: "phone number of patient, that includes country code."
          example: +972505201591
        languages:
          maxItems: 10
          type: array
          description: preferred languages of the patient.
          example:
          - Hebrew
          - Spanish
          items:
            type: string
          default: []
        birth_date:
          type: string
          description: birth date of patient.
          format: date
          example: 2000-07-21
        emergency_contacts:
          maxItems: 10
          type: array
          description: phone numbers of emergency contacts.
          items:
            $ref: '#/components/schemas/EmergencyContact'
          default: []
        referred_by:
          maxLength: 100
          type: string
          description: by who the patient got to the clinique.
          example: John
        special_note:
          maxLength: 500
          type: string
          description: additional notes.
          example: Can't answer calls between 12:00 and 20:00
    Patient:
      allOf:
      - required:
        - active
        - age
        - birth_date
        - emergency_contacts
        - gender
        - id
        - languages
        - name
        - personal_id
        type: object
        properties:
          id:
            type: integer
            description: identifier of the patient.
            format: int32
            example: 228
          active:
            type: boolean
            description: whether the patient still visits the clinic.
            example: true
            default: true
          age:
            type: integer
            description: estimated age of patient in years.
            format: int32
            example: 23
      - $ref: '#/components/schemas/PatientBase'
    PersonalId:
      required:
      - id
      - type
      type: object
      properties:
        id:
          maxLength: 100
          minLength: 1
          type: string
          description: identifier of the identity card
          example: "3523651512"
        type:
          maxLength: 100
          minLength: 1
          type: string
          description: type of the identity card
          example: ID
      description: identity card
    EmergencyContact:
      required:
      - closeness
      - name
      - phone
      type: object
      properties:
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: name of the contact
          example: Alexa Smith
        closeness:
          maxLength: 100
          minLength: 1
          type: string
          description: closeness of the contact to the patient.
          example: Mother
        phone:
          type: string
          description: "phone number of patient, that includes country code."
          example: +972603159352
    DoctorBase:
      required:
      - name
      - phone_number
      type: object
      properties:
        name:
          maxLength: 100
          minLength: 1
          type: string
          description: full name of doctor.
          example: Moshe Strauss
        gender:
          type: string
          description: gender of the doctor.
          example: male
          default: unspecified
          enum:
          - unspecified
          - male
          - female
        phone_number:
          type: string
          description: "phone number of doctor, that includes country code."
          example: +972501131591
        specialities:
          maxItems: 30
          type: array
          description: specialities of the doctor.
          example:
          - Family
          - OBGYN
          items:
            type: string
          default: []
        special_note:
          maxLength: 500
          type: string
          description: additional notes.
          example: Works only with males
    Doctor:
      allOf:
        - required:
            - active
            - gender
            - id
            - name
            - phone_number
            - specialities
          type: object
          properties:
            id:
              type: integer
              description: identifier of the doctor.
              format: int32
              example: 13
            active:
              type: boolean
              description: whether the doctor still works in the clinic.
              example: true
              default: true
        - $ref: '#/components/schemas/DoctorBase'
    AppointmentBase:
      required:
      - doctor_id
      - end_time
      - start_time
      type: object
      properties:
        patient_id:
          type: integer
          description: patient assigned to the appointment
          format: int32
          example: 123
        doctor_id:
          type: integer
          description: doctor assigned to the appointment
          format: int32
          example: 11
        start_time:
          type: string
          description: start time of the appointment
          format: date-time
          example: 2024-03-20T14:30:00Z
        end_time:
          type: string
          description: end time of the appointment
          format: date-time
          example: 2024-03-20T15:30:00Z
    Appointment:
      allOf:
      - $ref: '#/components/schemas/AppointmentBase'
      - required:
        - approved_by_patient
        - doctor_id
        - end_time
        - id
        - start_time
        - visited
        type: object
        properties:
          id:
            type: integer
            description: identifier of the appointment.
            format: int32
            example: 13
          approved_by_patient:
            type: boolean
            description: whether the assigned patient approved that he/she will arrive
            example: true
            default: false
          visited:
            type: boolean
            description: whether the assigned patient come to the appointment
            default: false
    AppointmentEdit:
      required:
      - patient_id
      - doctor_id
      - end_time
      - start_time
      - approved_by_patient
      - visited
      type: object
      properties:
        patient_id:
          type: integer
          description: patient assigned to the appointment
          format: int32
          example: 123
        doctor_id:
          type: integer
          description: doctor assigned to the appointment
          format: int32
          example: 11
        start_time:
          type: string
          description: start time of the appointment
          format: date-time
          example: 2024-03-20T14:30:00Z
        end_time:
          type: string
          description: end time of the appointment
          format: date-time
          example: 2024-03-20T15:30:00Z
        approved_by_patient:
          type: boolean
          description: whether the assigned patient approved that he/she will arrive
          example: true
          default: false
        visited:
          type: boolean
          description: whether the assigned patient come to the appointment
          default: false
    IdHolder:
      required:
      - id
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 25
    PatientIdHolder:
      required:
      - patient_id
      type: object
      properties:
        patient_id:
          type: integer
          format: int32
          example: 25
